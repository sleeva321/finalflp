-------------------------------------------------------------------discount--------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------bean----------------------------------------------------------------------------------------------------------------
package com.cg.bean;

import java.sql.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

@Entity
@Table(name="discount1")
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class Discount {
	@Id
	@GeneratedValue(strategy=GenerationType.SEQUENCE)
	private Integer discountId;
	
	@OneToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="Product.productID")
	private Product product;
	
	@Column
	private Double discount;
	
	@Column
	private Date startDate;
	
	@Column
	private Date endDate;

	public Discount() {
		// TODO Auto-generated constructor stub
	}

	public Discount(Product product, Double discount, Date startDate, Date endDate) {
		super();
		this.product = product;
		this.discount = discount;
		this.startDate = startDate;
		this.endDate = endDate;
	}

	public Integer getDiscountId() {
		return discountId;
	}

	public void setDiscountId(Integer discountId) {
		this.discountId = discountId;
	}

	public Product getProduct() {
		return product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	public Double getDiscount() {
		return discount;
	}

	public void setDiscount(Double discount) {
		this.discount = discount;
	}

	public Date getStartDate() {
		return startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	public Date getEndDate() {
		return endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Override
	public String toString() {
		return "Discount [discountId=" + discountId + ", product=" + product + ", discount=" + discount + ", startDate="
				+ startDate + ", endDate=" + endDate + "]";
	}
	
	
	
}

------------------------------------------------------------------------------controller-----------------------------------------------------------------------------------------------

package com.cg.controller;


import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.cg.bean.Discount;
import com.cg.bean.Merchant;
import com.cg.bean.Product;

import com.cg.bean.Promocode;
import com.cg.bean.User1;

import com.cg.service.AdminServices;

@CrossOrigin()
@RestController
@RequestMapping("/admin")
public class AdminActionController {
	
	

	@Autowired
	private AdminServices adminService;
	@GetMapping(value = "/AllDiscounts")
	public List<Discount> AllDiscounts() {
     
      return adminService.AllDiscounts();
	}
	
	@GetMapping(value = "/findDiscount/{discountId}")
	public Discount findDiscount(@PathVariable("discountId") int discountId) {
     
      return adminService.findDiscount(discountId);
	}
	
	
	@PostMapping(value = "/addDiscount",consumes= {"application/json"})
	public String addDiscount(@RequestBody Discount discount) {
     
        
		adminService.addDiscount(discount);
		return "Discount Added";
	}
	
	@PutMapping(value = "/updateDiscount",consumes= {"application/json"})
	public String updateDiscount(@RequestBody Discount discount) {
     
        
		adminService.updateDiscount(discount);
		return "Discount updated";
	}

	@DeleteMapping("/deleteDiscount/{discountId}")
	public String removeDiscount(@PathVariable("discountId") int discountId) {
		adminService.removeDiscount(discountId);
		return "Discount deleted";
	}
	
	
	---------------------------------------------------------------------------DAO--------------------------------------------------------------------------------------------------------
	package com.cg.dao;

import org.springframework.data.jpa.repository.JpaRepository;

import com.cg.bean.Discount;

public interface DiscountDAO extends JpaRepository<Discount, Integer>{

}
------------------------------------------------------------------------------exception-------------------------------------------------------------------------------------------------
-------------------------------------------------ApplicationException-------------------
package com.cg.exception;


public class ApplicationException extends RuntimeException{
	public ApplicationException(String message) {
		super(message);
	}
}
-----------------------------------------------ApplicationException Handler--------------
package com.cg.exception;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;

@ControllerAdvice
public class ApplicationExceptionHandler {
	@ExceptionHandler({ApplicationException.class})
	public ResponseEntity<String> handler(ApplicationException ex){
		return new ResponseEntity<String>(ex.getMessage(), HttpStatus.NOT_FOUND);
	}
}
-----------------------------------------------------------------------------Service-------------------------------------------------------------------------------------------------
-----------------service---------------------------------
ackage com.cg.service;



import java.util.List;

import com.cg.bean.Discount;
import com.cg.bean.Merchant;
import com.cg.bean.Product;

import com.cg.bean.Promocode;
import com.cg.bean.User1;







public interface AdminServices {
	public Discount addDiscount(Discount discount); 
	public void removeDiscount(int discountId);
	public Discount findDiscount(int discountId);
	public List<Discount> AllDiscounts();
	public void updateDiscount(Discount discount);
	
	}
---------------serviceimpl------------------------------
package com.cg.service;



import java.util.List;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;


import com.cg.dao.DiscountDAO;
import com.cg.dao.IPromoDao;
import com.cg.dao.MerchantDAO;
import com.cg.dao.ProductDAO;
import com.cg.dao.User1DAO;
import com.cg.exception.ApplicationException;
import com.cg.bean.Discount;
import com.cg.bean.Merchant;
import com.cg.bean.Product;

import com.cg.bean.Promocode;
import com.cg.bean.User1;





@Service
@Transactional
public class AdminServicesImpl implements AdminServices {
@Autowired
	private DiscountDAO discountDAO;

	
	@Override
	@Transactional
	public Discount addDiscount(Discount discount) {
		
		return discountDAO.save(discount);
	}
	
	
	@Override
	@Transactional
	public void removeDiscount(int discountId) {
		 discountDAO.deleteById(discountId);
		}
	
	@Override
	@Transactional
	public List<Discount> AllDiscounts() {
		return discountDAO.findAll();
	}

	
	@Override
	public Discount findDiscount(int discountId) {
		Discount d=discountDAO.findById(discountId).get();
		if(d==null)
		{
			throw new ApplicationException ("Discount not Found");
		}
		else {
			  return d ;
		   }
		
	}

	@Override
	public void updateDiscount(Discount discount) {
		// TODO Auto-generated method stub
		
		
		this.removeDiscount(discount.getDiscountId());
		this.addDiscount(discount);
	
		
	}
	
	
	